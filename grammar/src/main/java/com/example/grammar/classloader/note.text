类的加载：
加载==》连接==》初始化
加载：把字节码文件加载到jvm中
连接：
  验证：确保Class文件中包含的信息符合虚拟机的要求，不会危害虚拟机的自身安全。包括文件格式验证、元数据验证、字节码验证、符号引用验证等。
  准备：为类变量分配内存，设置默认初始值。
  解析：在类型的常量池中寻找类、接口、字段和方法的符号引用，并把这些符号引用替换为直接引用。
初始化：为类变量赋予正确的初始值。

7种情况触发类的加载：
1、创建类的实例
2、访问类或接口的成员变量，或者对静态变量赋值（调用常量不会导致类加载（在编译期能确定的值），常量在编译阶段会存入到调用这个方法所在的类的常量池中）
3、调用类的静态方法
4、反射访问类
5、初始化一个类的子类
6、虚拟机启动时标明启动类的类
7、

双亲委托模型的好处：
1、确保java核心类库类型的安全
2、确保java核心类库的类不被自定义的类替代
3、不同的类加载器可以加载相同的类到不同的命名空间，使之并存于jvm中，在很多框架中得到运用

 * -XX:+TraceClassLoading 用于追踪类的加载信息并打印出来
 * -XX:+<option> 表示开启option选项
 * -XX:-<option> 表示关闭option选项
 * -XX:<option>=<value> 表示option选项的值设置为value

  * 反编译  助记符：
  * ldc 表示将int,float或是String类型的常量值从常量池推送至栈顶
  * bipush 表示将单字节（-128,127）的常量值推送至栈顶
  * sipush 表示将短整型（-32768,32767）的常量值推送至栈顶
  * iconst_m1 表示将int类型-1推送至栈顶（iconst_m1至iconst_5)
